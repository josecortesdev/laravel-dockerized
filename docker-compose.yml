version: '3.8'

services: 
  nginx:
    build: 
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 8080:8080
    volumes: 
      - ./src/:/var/www/html/
    depends_on: 
      - mysql
      - php
  mysql: 
    image: mariadb:10.5
    ports: 
      - 3307:3306
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes: 
      - ./mysql:/var/lib/mysql
  php:
    build: 
      context: .
      dockerfile: php.dockerfile
    volumes: 
      - ./src/:/var/www/html
    # command: sh -c "chown -R laravel:laravel /var/www/html/storage /var/www/html/bootstrap/cache && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache && php-fpm -y /usr/local/etc/php-fpm.d/www.conf -R"
    command: sh -c "chown -R laravel:laravel /var/www/html/storage /var/www/html/bootstrap/cache /var/www/html/database && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache && chmod 664 /var/www/html/database/database.sqlite && php-fpm -F -y /usr/local/etc/php-fpm.d/www.conf -R"
  redis:
      image: redis:alpine
      ports:
        - 6379:6379
  queue-worker:
      build:
        context: .
        dockerfile: php.dockerfile
      volumes:
        - ./src/:/var/www/html
      depends_on:
        - mysql
        - redis
      command: php /var/www/html/artisan queue:work
  composer:
    build: 
      context: .
      dockerfile: composer.dockerfile
    volumes: 
      - ./src/:/var/www/html
    working_dir: /var/www/html
    command: tail -f /dev/null
  npm:
    image: node:current-alpine
    volumes: 
      - ./src/:/var/www/html
    entrypoint: ["npm"]
    working_dir: /var/www/html
  artisan: 
    build: 
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src/:/var/www/html
    working_dir: /var/www/html
    depends_on: 
      - mysql
    # entrypoint: ["php", "/var/www/html/artisan"]
    command: tail -f /dev/null
    
